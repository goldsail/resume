name: Build LaTeX document
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
jobs:
  build_latex:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Git repository
        uses: actions/checkout@v1
      - name: Compile LaTeX document for resume
        uses: xu-cheng/latex-action@master
        with:
          root_file: fan_jin_resume.tex
          args: -xelatex -file-line-error -interaction=nonstopmode -jobname=fan_jin_resume
          extra_packages: moderncv
      - name: Compile LaTeX document for resume (easy version)
        uses: xu-cheng/latex-action@master
        with:
          root_file: fan_jin_resume.tex
          args: -xelatex -file-line-error -interaction=nonstopmode -jobname=fan_jin_resume_easy_version
          extra_packages: moderncv
      - name: Azure log in
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Upload PDF to Azure Blob
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az storage blob upload \
              --overwrite \
              --account-name ${{ secrets.AZURE_STORAGE_ACCOUNT }} \
              --container-name ${{ secrets.AZURE_STORAGE_CONTAINER }} \
              --name fan_jin_resume.pdf \
              --file fan_jin_resume.pdf \
              --auth-mode login
            echo "Deploy Success"
      - name: Upload PDF (easy version) to Azure Blob
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az storage blob upload \
              --overwrite \
              --account-name ${{ secrets.AZURE_STORAGE_ACCOUNT }} \
              --container-name ${{ secrets.AZURE_STORAGE_CONTAINER }} \
              --name fan_jin_resume_easy_version.pdf \
              --file fan_jin_resume_easy_version.pdf \
              --auth-mode login
            echo "Deploy Success"
      - name: Create release tag name from timestamp
        id: create_releasetag_name
        run: |
          echo ${{ github.event.repository.updated_at }} | \
          sed 's/:/./g' | \ # Release tag names cannot contain colons, so replacing with a dot.
          read date && echo "builddate=$date" >> $GITHUB_OUTPUT
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.create_releasetag_name.outputs.builddate }}
          release_name: Release ${{ steps.create_releasetag_name.outputs.builddate }}
          draft: false
          prerelease: false
      - name: Upload GitHub Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: ./fan_jin_resume.pdf
          asset_name: fan_jin_resume.pdf
          asset_content_type: application/pdf
      - name: Upload GitHub Release Asset (easy version)
        id: upload-release-asset-easy-version
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./fan_jin_resume_easy_version.pdf
          asset_name: fan_jin_resume_easy_version.pdf
          asset_content_type: application/pdf
            
